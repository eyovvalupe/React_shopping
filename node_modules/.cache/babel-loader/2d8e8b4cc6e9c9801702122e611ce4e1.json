{"ast":null,"code":"var _jsxFileName = \"/Users/jared/workspace/github/jaredpalmer/react-suspense/src/components/ListItem.js\";\nimport React from 'react';\nimport { Link } from '@reach/router';\nimport { Spinner } from './Spinner';\nimport IconPerson from './Icon/IconPerson';\n\nfunction ListItem(_ref) {\n  var item = _ref.item,\n      to = _ref.to,\n      _onClick = _ref.onClick,\n      currentId = _ref.currentId;\n  return React.createElement(Link, {\n    to: to,\n    className: \"name\",\n    onClick: function onClick() {\n      if (_onClick) {\n        _onClick(item.id);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"item\",\n    key: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, item.images && item.images.length > 0 && item.images[2] && item.images[2].url ? React.createElement(\"img\", {\n    className: \"artwork\",\n    src: item.images[1].url,\n    alt: item.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }) : React.createElement(IconPerson, {\n    className: \"artwork\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"col flex-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, item.name), React.createElement(\"div\", {\n    className: \"meta\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, item.type.toUpperCase())), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, currentId === item.id ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }) : null)));\n}\n\nexport default ListItem;","map":{"version":3,"sources":["/Users/jared/workspace/github/jaredpalmer/react-suspense/src/components/ListItem.js"],"names":["React","Link","Spinner","IconPerson","ListItem","item","to","onClick","currentId","id","images","length","url","name","type","toUpperCase"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;AAEA,SAASC,QAAT,OAAoD;AAAA,MAAhCC,IAAgC,QAAhCA,IAAgC;AAAA,MAA1BC,EAA0B,QAA1BA,EAA0B;AAAA,MAAtBC,QAAsB,QAAtBA,OAAsB;AAAA,MAAbC,SAAa,QAAbA,SAAa;AAClD,SACE,oBAAC,IAAD;AACE,IAAA,EAAE,EAAEF,EADN;AAEE,IAAA,SAAS,EAAC,MAFZ;AAGE,IAAA,OAAO,EAAE,mBAAM;AACb,UAAIC,QAAJ,EAAa;AACXA,QAAAA,QAAO,CAACF,IAAI,CAACI,EAAN,CAAP;AACD;AACF,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,GAAG,EAAEJ,IAAI,CAACI,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,IAAI,CAACK,MAAL,IACDL,IAAI,CAACK,MAAL,CAAYC,MAAZ,GAAqB,CADpB,IAEDN,IAAI,CAACK,MAAL,CAAY,CAAZ,CAFC,IAGDL,IAAI,CAACK,MAAL,CAAY,CAAZ,EAAeE,GAHd,GAIC;AAAK,IAAA,SAAS,EAAC,SAAf;AAAyB,IAAA,GAAG,EAAEP,IAAI,CAACK,MAAL,CAAY,CAAZ,EAAeE,GAA7C;AAAkD,IAAA,GAAG,EAAEP,IAAI,CAACQ,IAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJD,GAMC,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EASE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBR,IAAI,CAACQ,IAA5B,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBR,IAAI,CAACS,IAAL,CAAUC,WAAV,EAAvB,CAFF,CATF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMP,SAAS,KAAKH,IAAI,CAACI,EAAnB,GAAwB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB,GAAsC,IAA5C,CAbF,CATF,CADF;AA2BD;;AAED,eAAeL,QAAf","sourcesContent":["import React from 'react';\nimport { Link } from '@reach/router';\nimport { Spinner } from './Spinner';\nimport IconPerson from './Icon/IconPerson';\n\nfunction ListItem({ item, to, onClick, currentId }) {\n  return (\n    <Link\n      to={to}\n      className=\"name\"\n      onClick={() => {\n        if (onClick) {\n          onClick(item.id);\n        }\n      }}\n    >\n      <div className=\"item\" key={item.id}>\n        {item.images &&\n        item.images.length > 0 &&\n        item.images[2] &&\n        item.images[2].url ? (\n          <img className=\"artwork\" src={item.images[1].url} alt={item.name} />\n        ) : (\n          <IconPerson className=\"artwork\" />\n        )}\n        <div className=\"col flex-1\">\n          <div className=\"name\">{item.name}</div>\n          <div className=\"meta\">{item.type.toUpperCase()}</div>\n        </div>\n        <div>{currentId === item.id ? <Spinner /> : null}</div>\n      </div>\n    </Link>\n  );\n}\n\nexport default ListItem;\n"]},"metadata":{},"sourceType":"module"}