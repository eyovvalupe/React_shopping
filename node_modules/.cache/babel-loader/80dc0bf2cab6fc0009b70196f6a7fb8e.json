{"ast":null,"code":"import _objectWithoutProperties from \"/Users/jared/workspace/github/jaredpalmer/react-suspense/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/jared/workspace/github/jaredpalmer/react-suspense/src/components/Img.js\";\nimport React from 'react';\nimport { createResource } from 'react-cache';\nexport var ImgResource = createResource(function (src) {\n  return new Promise(function (resolve) {\n    var img = new Image();\n\n    img.onload = function () {\n      return resolve(img);\n    };\n\n    img.src = src;\n  });\n});\nexport default function Img(_ref) {\n  var src = _ref.src,\n      alt = _ref.alt,\n      props = _objectWithoutProperties(_ref, [\"src\", \"alt\"]);\n\n  ImgResource.read(src);\n  return React.createElement(\"img\", Object.assign({\n    alt: alt,\n    src: src\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/jared/workspace/github/jaredpalmer/react-suspense/src/components/Img.js"],"names":["React","createResource","ImgResource","src","Promise","resolve","img","Image","onload","Img","alt","props","read"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,aAA/B;AAEA,OAAO,IAAMC,WAAW,GAAGD,cAAc,CAAC,UAAAE,GAAG,EAAI;AAC/C,SAAO,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC5B,QAAMC,GAAG,GAAG,IAAIC,KAAJ,EAAZ;;AACAD,IAAAA,GAAG,CAACE,MAAJ,GAAa;AAAA,aAAMH,OAAO,CAACC,GAAD,CAAb;AAAA,KAAb;;AACAA,IAAAA,GAAG,CAACH,GAAJ,GAAUA,GAAV;AACD,GAJM,CAAP;AAKD,CANwC,CAAlC;AAQP,eAAe,SAASM,GAAT,OAAqC;AAAA,MAAtBN,GAAsB,QAAtBA,GAAsB;AAAA,MAAjBO,GAAiB,QAAjBA,GAAiB;AAAA,MAATC,KAAS;;AAClDT,EAAAA,WAAW,CAACU,IAAZ,CAAiBT,GAAjB;AACA,SAAO;AAAK,IAAA,GAAG,EAAEO,GAAV;AAAe,IAAA,GAAG,EAAEP;AAApB,KAA6BQ,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD","sourcesContent":["import React from 'react';\nimport { createResource } from 'react-cache';\n\nexport const ImgResource = createResource(src => {\n  return new Promise(resolve => {\n    const img = new Image();\n    img.onload = () => resolve(img);\n    img.src = src;\n  });\n});\n\nexport default function Img({ src, alt, ...props }) {\n  ImgResource.read(src);\n  return <img alt={alt} src={src} {...props} />;\n}\n"]},"metadata":{},"sourceType":"module"}