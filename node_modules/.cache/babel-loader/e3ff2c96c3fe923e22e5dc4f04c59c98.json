{"ast":null,"code":"import _classCallCheck from \"/Users/jared/workspace/github/jaredpalmer/react-suspense/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jared/workspace/github/jaredpalmer/react-suspense/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jared/workspace/github/jaredpalmer/react-suspense/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jared/workspace/github/jaredpalmer/react-suspense/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jared/workspace/github/jaredpalmer/react-suspense/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jared/workspace/github/jaredpalmer/react-suspense/src/components/ArtistAlbums.js\";\nimport React, { Fragment } from 'react';\nimport { fetchArtistAlbumsJSON } from '../api';\nimport { Spinner } from './Spinner';\nimport { Link } from '@reach/router';\nimport IconPerson from './Icon/IconPerson';\n\nvar ArtistAlbums =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ArtistAlbums, _React$Component);\n\n  function ArtistAlbums() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ArtistAlbums);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ArtistAlbums)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isLoading: true,\n      albums: []\n    };\n    return _this;\n  }\n\n  _createClass(ArtistAlbums, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetchArtistAlbumsJSON(this.props.id).then(function (albums) {\n        return _this2.setState({\n          isLoading: false,\n          albums: albums\n        });\n      }, function (error) {\n        return _this2.setState({\n          isLoading: false,\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          albums = _this$state.albums;\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Albums\"), isLoading ? React.createElement(Spinner, {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }) : albums ? React.createElement(AlbumGrid, {\n        albums: albums,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }) : null);\n    }\n  }]);\n\n  return ArtistAlbums;\n}(React.Component);\n\nfunction AlbumGrid(_ref) {\n  var albums = _ref.albums;\n  return React.createElement(\"div\", {\n    className: \"album-grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, albums && albums.slice(0, 6).map(function (album) {\n    return React.createElement(AlbumItem, {\n      album: album,\n      key: album.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    });\n  }));\n}\n\nfunction AlbumItem(_ref2) {\n  var album = _ref2.album;\n  return React.createElement(Link, {\n    to: \"/album/\".concat(album.id),\n    key: album.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, album.images && album.images.length > 0 ? React.createElement(\"div\", {\n    className: \"album-artwork\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"album-image\",\n    src: album.images[1].url,\n    alt: album.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"album-title center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, album.name), React.createElement(\"div\", {\n    className: \"album-meta center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, album.total_tracks, \" Songs \\u2022 \", album.release_date.slice(0, 4))) : React.createElement(\"div\", {\n    className: \"album-artwork\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(IconPerson, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })));\n}\n\nexport default ArtistAlbums;","map":{"version":3,"sources":["/Users/jared/workspace/github/jaredpalmer/react-suspense/src/components/ArtistAlbums.js"],"names":["React","Fragment","fetchArtistAlbumsJSON","Spinner","Link","IconPerson","ArtistAlbums","state","isLoading","albums","props","id","then","setState","error","Component","AlbumGrid","slice","map","album","AlbumItem","images","length","url","name","total_tracks","release_date"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport { fetchArtistAlbumsJSON } from '../api';\nimport { Spinner } from './Spinner';\nimport { Link } from '@reach/router';\nimport IconPerson from './Icon/IconPerson';\n\nclass ArtistAlbums extends React.Component {\n  state = {\n    isLoading: true,\n    albums: [],\n  };\n\n  componentDidMount() {\n    fetchArtistAlbumsJSON(this.props.id).then(\n      albums => this.setState({ isLoading: false, albums }),\n      error => this.setState({ isLoading: false, error })\n    );\n  }\n\n  render() {\n    const { isLoading, albums } = this.state;\n    return (\n      <Fragment>\n        <h3>Albums</h3>\n        {isLoading ? (\n          <Spinner className=\"center\" />\n        ) : albums ? (\n          <AlbumGrid albums={albums} />\n        ) : null}\n      </Fragment>\n    );\n  }\n}\n\nfunction AlbumGrid({ albums }) {\n  return (\n    <div className=\"album-grid\">\n      {albums &&\n        albums\n          .slice(0, 6)\n          .map(album => <AlbumItem album={album} key={album.id} />)}\n    </div>\n  );\n}\n\nfunction AlbumItem({ album }) {\n  return (\n    <Link to={`/album/${album.id}`} key={album.id}>\n      {album.images && album.images.length > 0 ? (\n        <div className=\"album-artwork\">\n          <img\n            className=\"album-image\"\n            src={album.images[1].url}\n            alt={album.name}\n          />\n          <div className=\"album-title center\">{album.name}</div>\n          <div className=\"album-meta center\">\n            {album.total_tracks} Songs â€¢ {album.release_date.slice(0, 4)}\n          </div>\n        </div>\n      ) : (\n        <div className=\"album-artwork\">\n          <IconPerson />\n        </div>\n      )}\n    </Link>\n  );\n}\n\nexport default ArtistAlbums;\n"]},"metadata":{},"sourceType":"module"}