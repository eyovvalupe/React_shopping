{"ast":null,"code":"var _jsxFileName = \"/Users/jared/workspace/github/jaredpalmer/react-suspense/src/components/Track.js\";\nimport React from 'react';\nimport { Spinner } from './Spinner';\nimport IconPause from './Icon/IconPause';\nimport IconPlay from './Icon/IconPlay';\nimport { PlayerContext } from './PlayerProvider';\nexport function Track(_ref) {\n  var track = _ref.track;\n  return React.createElement(PlayerContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, function (_ref2) {\n    var currentTrack = _ref2.currentTrack,\n        play = _ref2.play,\n        pause = _ref2.pause,\n        isLoading = _ref2.isLoading,\n        isPlaying = _ref2.isPlaying;\n    var iAmPlaying = currentTrack && currentTrack.id === track.id && isPlaying;\n    return React.createElement(\"div\", {\n      className: \"item track\",\n      key: track.id,\n      role: \"button\",\n      onClick: iAmPlaying ? pause(track) : play(track),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, iAmPlaying ? isLoading ? React.createElement(Spinner, {\n      className: \"avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }) : React.createElement(IconPause, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }) : React.createElement(IconPlay, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, track.name), React.createElement(\"div\", {\n      className: \"meta\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, track.type.toUpperCase())));\n  });\n}","map":{"version":3,"sources":["/Users/jared/workspace/github/jaredpalmer/react-suspense/src/components/Track.js"],"names":["React","Spinner","IconPause","IconPlay","PlayerContext","Track","track","currentTrack","play","pause","isLoading","isPlaying","iAmPlaying","id","name","type","toUpperCase"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,OAAO,SAASC,KAAT,OAA0B;AAAA,MAATC,KAAS,QAATA,KAAS;AAC/B,SACE,oBAAC,aAAD,CAAe,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,iBAAyD;AAAA,QAAtDC,YAAsD,SAAtDA,YAAsD;AAAA,QAAxCC,IAAwC,SAAxCA,IAAwC;AAAA,QAAlCC,KAAkC,SAAlCA,KAAkC;AAAA,QAA3BC,SAA2B,SAA3BA,SAA2B;AAAA,QAAhBC,SAAgB,SAAhBA,SAAgB;AACxD,QAAMC,UAAU,GACdL,YAAY,IAAIA,YAAY,CAACM,EAAb,KAAoBP,KAAK,CAACO,EAA1C,IAAgDF,SADlD;AAEA,WACE;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,GAAG,EAAEL,KAAK,CAACO,EAFb;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,OAAO,EAAED,UAAU,GAAGH,KAAK,CAACH,KAAD,CAAR,GAAkBE,IAAI,CAACF,KAAD,CAJ3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGM,UAAU,GACTF,SAAS,GACP,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADO,GAGP,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJO,GAOT,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,EAgBE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBJ,KAAK,CAACQ,IAA7B,CADF,EAEE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBR,KAAK,CAACS,IAAN,CAAWC,WAAX,EAAvB,CAFF,CAhBF,CADF;AAuBD,GA3BH,CADF;AA+BD","sourcesContent":["import React from 'react';\nimport { Spinner } from './Spinner';\nimport IconPause from './Icon/IconPause';\nimport IconPlay from './Icon/IconPlay';\nimport { PlayerContext } from './PlayerProvider';\n\nexport function Track({ track }) {\n  return (\n    <PlayerContext.Consumer>\n      {({ currentTrack, play, pause, isLoading, isPlaying }) => {\n        const iAmPlaying =\n          currentTrack && currentTrack.id === track.id && isPlaying;\n        return (\n          <div\n            className=\"item track\"\n            key={track.id}\n            role=\"button\"\n            onClick={iAmPlaying ? pause(track) : play(track)}\n          >\n            {iAmPlaying ? (\n              isLoading ? (\n                <Spinner className=\"avatar\" />\n              ) : (\n                <IconPause />\n              )\n            ) : (\n              <IconPlay />\n            )}\n\n            <div className=\"col\">\n              <div className=\"name\">{track.name}</div>\n              <div className=\"meta\">{track.type.toUpperCase()}</div>\n            </div>\n          </div>\n        );\n      }}\n    </PlayerContext.Consumer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}